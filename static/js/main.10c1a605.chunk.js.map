{"version":3,"sources":["Data.js","Detail.js","Cart.js","App.js","MainPanel.jpg","reportWebVitals.js","index.js"],"names":["id","title","content","price","connect","state","cartState","props","useParams","histroy","useHistory","useState","stock","stoctSet","stock2","useContext","StockContext","selTab","selTabSet","tabSwitch","tabSwitchSet","useEffect","alertClose","setTimeout","clearTimeout","className","div","src","Number","width","data","toLocaleString","StockInfo","Stock","onClick","dispatch","type","payload","push","goBack","Nav","variant","defaultActiveKey","Item","Link","eventKey","disabled","CSSTransition","in","classNames","timeout","TabContent","history","alertSw","alertSwSet","sumPrice","Table","responsive","map","e","i","quan","Button","discountPrice","colSpan","console","log","Word","styled","Weight","React","createContext","App","Data","dataSet","stockSet","dataZero","dataZeroSet","spinnerOn","spinnerOnSet","Navbar","bg","expand","Brand","Toggle","aria-controls","Collapse","NavDropdown","href","Divider","Form","inline","FormControl","placeholder","exact","path","Jumbotron","Provider","value","Items","Num","Spinner","animation","role","axios","get","then","result","newArray","catch","to","Test","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","storeCart","duplicateCheck","store","createStore","CartAction","copy","slice","length","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.10c1a605.chunk.js","sourcesContent":["export default [\r\n  {\r\n    id : 0,\r\n    title : \"White and Black\",\r\n    content : \"Born in France\",\r\n    price : 120000\r\n  },\r\n\r\n  {\r\n    id : 1, \r\n    title : \"Red Knit\",\r\n    content : \"Born in Seoul\",\r\n    price : 110000\r\n  },\r\n\r\n  {\r\n    id : 2,\r\n    title : \"Grey Yordan\",\r\n    content : \"Born in the States\",\r\n    price : 130000\r\n  }]","import {Nav, TabContent} from 'react-bootstrap'\r\nimport React, {useEffect, useState, useContext} from 'react';\r\nimport { useHistory, useParams } from 'react-router-dom'\r\nimport {CSSTransition} from 'react-transition-group';\r\nimport \"./Detail.scss\"\r\nimport {StockContext} from \"./App.js\"\r\nimport { connect } from 'react-redux';\r\n\r\nfunction Detail(props) {\r\n    let { id } = useParams();\r\n    let histroy = useHistory();\r\n    let [stock, stoctSet] = useState(true);\r\n    let stock2 = useContext(StockContext);\r\n    let [selTab, selTabSet] = useState(0);\r\n    let [tabSwitch, tabSwitchSet] = useState(false);\r\n\r\n    useEffect(()=>{\r\n    let alertClose = setTimeout(() => {\r\n        stoctSet(stock=false); }, 2000);\r\n        return ()=>{clearTimeout(alertClose)};\r\n    }, []);//[조건]\r\n    \r\n    return (\r\n        <div className=\"container\">\r\n            { stock === true && props.stock[id] <= 5 ?\r\n            <div className=\"alertBox\">\r\n                <div className=\"my-alert\">\r\n                    <p>재고가 얼마 남지 않았습니다.</p>\r\n                </div>\r\n                <div className=\"my-alert2\">\r\n                    <p>재고 소진시 이벤트 종료</p>\r\n                </div>\r\n            </div>\r\n                : null}\r\n            <div div=\"div\" className=\"row\">\r\n                <div className=\"col-md-6\">\r\n                    <img src={ \"https://codingapple1.github.io/shop/shoes\"+(Number([id])+1)+\".jpg\" } width=\"100%\"/>\r\n                </div>\r\n                <div className=\"col-md-6 mt-4\">\r\n                    <h4 className=\"pt-5\">{props.data[id].title}</h4>\r\n                    <p>{props.data[id].content}</p>\r\n                    <p className=\"BeforePrice\">{props.data[id].price.toLocaleString()}원</p>\r\n                    <p className=\"AfterPrice\">{(props.data[id].price*0.8).toLocaleString()}원</p>\r\n                    <StockInfo Stock={stock2[id]}></StockInfo>\r\n                    {props.stock[id] > 0 ?\r\n                    <button className=\"btn btn-danger\" onClick={()=>{ \r\n                        props.dispatch({type : 'AddItem', payload : props.data[id]});\r\n                        histroy.push('/cart');\r\n                    }}\r\n                        >주문하기</button> : null\r\n                    }\r\n                    <button className=\"btn btn-danger\" onClick={()=>{histroy.goBack()}}>뒤로가기</button>\r\n                </div>\r\n            </div>\r\n            <Nav className=\"mt-5\" variant=\"tabs\" defaultActiveKey=\"link-1\">\r\n                <Nav.Item>\r\n                    <Nav.Link eventKey=\"link-0\" onClick={()=>{ tabSwitchSet(false); selTabSet(0);}} >Active</Nav.Link>\r\n                </Nav.Item>\r\n                <Nav.Item>\r\n                    <Nav.Link eventKey=\"link-1\" onClick={()=>{ tabSwitchSet(false); selTabSet(1);}} >Option 2</Nav.Link>\r\n                </Nav.Item>\r\n                <Nav.Item>\r\n                    <Nav.Link eventKey=\"disabled\" disabled>\r\n                    Disabled\r\n                    </Nav.Link>\r\n                </Nav.Item>\r\n            </Nav>\r\n\r\n            <CSSTransition in={tabSwitch} classNames=\"wow\" timeout={500}>\r\n                <TabContent selTab={selTab} tabSwitchSet={tabSwitchSet}/>\r\n            </CSSTransition>\r\n        </div>\r\n    )\r\n\r\n    function TabContent(props){\r\n        useEffect(()=>{\r\n            props.tabSwitchSet(true);\r\n        })\r\n        if(props.selTab === 0){\r\n            return <div>0번째 내용입니디.</div>\r\n        }else if(props.selTab === 1){\r\n            return <div>1번째 내용입니디.</div>\r\n        }else if(props.selTab === 2){\r\n            return <div>2번째 내용입니디.</div>\r\n        }else {\r\n            return <div>잘못된 선택입니다.</div>\r\n        }\r\n    }\r\n\r\n    function StockInfo(props){\r\n        return(\r\n            <p>재고 : { props.Stock }</p>\r\n        )\r\n    }\r\n}\r\n\r\nfunction dataBinding(state) {\r\n    return {  \r\n      cartState : state\r\n    }\r\n  }\r\n\r\nexport default connect(dataBinding)(Detail);","import React, { useState } from 'react';\r\nimport {Table, Button} from 'react-bootstrap';\r\nimport { connect } from 'react-redux';\r\nimport { useHistory } from 'react-router-dom';\r\nimport \"./Cart.scss\"\r\n\r\nfunction Cart(props){\r\n  let history = useHistory();\r\n  let [alertSw, alertSwSet] = useState(true);\r\n  let sumPrice = 0;\r\n  return (\r\n    <div className=\"container\"> \r\n      <Table responsive=\"sm\">\r\n        <thead>\r\n          <tr>\r\n            <th>#</th>\r\n            <th>상품코드</th>\r\n            <th>상품명</th>\r\n            <th>수량</th>\r\n            <th>가격</th>\r\n            <th>변경</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {props.state != null?\r\n            props.state.map((e, i) => {\r\n              return(\r\n                <tr key={i}>\r\n                  <td>{i}</td>\r\n                  <td>{props.state[i].id}</td>\r\n                  <td><a className=\"ItemName\" onClick={()=>{history.push(\"/detail/\"+props.state[i].id)}}>{props.state[i].title}</a></td>\r\n                  <td>{props.state[i].quan}\r\n                  <Button variant=\"outline-info\" onClick={()=>{props.dispatch({type: 'IncreasedIn', payload : {i}}); }} >+</Button>\r\n                  <Button variant=\"outline-info\" onClick={()=>{props.dispatch({type: 'DecreasedIn', payload : {i}}); }}>-</Button></td>\r\n                  <td>{props.state[i].discountPrice}원</td>\r\n                  <td><Button variant=\"outline-success\">삭제</Button></td>\r\n                </tr>  \r\n              )\r\n            }) : null\r\n          }\r\n          <tr>\r\n            <th colSpan=\"4\"></th>\r\n            <th>총가격</th>\r\n            {\r\n              props.state != null ?\r\n            props.state.map((e, i)=> {\r\n              console.log(e);\r\n              sumPrice += (e.discountPrice*e.quan);  \r\n            }): null}\r\n            <th>{sumPrice}원</th>\r\n          </tr>\r\n        </tbody>\r\n      </Table>\r\n      {alertSw === true ? \r\n        <div className=\"my-alert2 cartAlert\">\r\n          <p>행사로 할인이 적용된 가격입니다.</p>\r\n          <button onClick={()=>{alertSwSet(false)}}>닫기</button>\r\n        </div>: null\r\n      }\r\n      <div className=\"buttonBox\">\r\n      <Button variant=\"outline-info\" onClick={()=>{props.dispatch({type: 'Payment'}); history.push(); }} >결제</Button>\r\n      <Button variant=\"outline-info\" onClick={()=>{props.dispatch({type: 'AllDelete'}); history.push(\"/\"); }} >장바구니 비우기</Button>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n  \r\n\r\nfunction dataBinding(state) {\r\n  return {  \r\n    state : state\r\n    // state : state.reducer // 리듀서가 여러개일때\r\n  }\r\n}\r\n\r\nexport default connect(dataBinding)(Cart);\r\n// export default Cart;","import { Button, Navbar,Nav, NavDropdown,FormControl, Form, Jumbotron, Spinner } from 'react-bootstrap';\nimport React, {useState, useContext } from 'react';\nimport './App.css';\nimport Data from \"./Data.js\";\nimport Detail from \"./Detail.js\";\nimport Cart from './Cart.js';\nimport {Link, Route, Switch, useHistory} from 'react-router-dom';\nimport styled from 'styled-components';\nimport axios from 'axios';\nimport panelImg from './MainPanel.jpg';\n\n\nlet Word = styled.div`\n    font-size : 25px;\n    font-weight : ${ props => props.Weight};\n`;\n\n// let StockContext = React.createContext();\nexport let StockContext = React.createContext();\n\nfunction App() {\n    let history = useHistory();\n    let [data, dataSet] = useState(Data);\n    let [stock, stockSet] = useState([3,12,13,4,14,15]);\n    let [dataZero, dataZeroSet ] = useState(false);\n    let [spinnerOn, spinnerOnSet ] = useState(false);\n    \n    return (\n        <div className=\"App\">\n            <Navbar bg=\"light\" expand=\"lg\">\n                <Navbar.Brand onClick={()=>{history.push(\"/\")}}>React-Bootstrap</Navbar.Brand>\n                <Navbar.Toggle aria-controls=\"basic-navbar-nav\"/>\n                <Navbar.Collapse id=\"basic-navbar-nav\">\n                    <Nav className=\"ml-auto\">\n                        <Nav.Link onClick={()=>{history.push(\"/\")}}>Home</Nav.Link>\n                        <Nav.Link onClick={()=>{history.push(\"/cart\")}}>장바구니</Nav.Link>\n                        <NavDropdown title=\"Dropdown\" id=\"basic-nav-dropdown\">\n                            <NavDropdown.Item href=\"#action/3.1\">Action</NavDropdown.Item>\n                            <NavDropdown.Item href=\"#action/3.2\">Another action</NavDropdown.Item>\n                            <NavDropdown.Item href=\"#action/3.3\">Something</NavDropdown.Item>\n                            <NavDropdown.Divider/>\n                            <NavDropdown.Item href=\"#action/3.4\">Separated link</NavDropdown.Item>\n                        </NavDropdown>\n                    </Nav>\n                        <Form inline=\"inline\">\n                            <FormControl type=\"text\" placeholder=\"Search\" className=\"mr=l-sm-2\"/>\n                            <Button variant=\"outline-success\">Search</Button>\n                        </Form>\n                </Navbar.Collapse>\n            </Navbar>\n            \n            <Switch>\n            <Route exact path=\"/\">  {/* //메인페이지 */}\n                <Jumbotron className=\"AdPanel\">\n                    {/* <img src={panelImg}></img> */}\n                    <h1>20% Season Off</h1>\n                    <p>\n                        This is a simple hero unit, a simple jumbotron-style component for calling extra\n                        attention to featured content or information.\n                    </p>\n                    <p>\n                        <Button variant=\"primary\">Learn more</Button>\n                    </p>\n                </Jumbotron>\n                <div className=\"Container\">\n                    <StockContext.Provider value={stock}>\n                    <div className=\"Row\">{\n                        // <div className=\"col-4\">\n                        //     <img src={ data[0].img }/>\n                        //     <h4>{ data[0].title }</h4>\n                        //     <p>{ data[0].content }<br/>{ data[0].price }원</p>\n                        // </div>\n                        data.map(function(e, i){\n                            return(\n                                <Items Data = { e } Num={i} key ={i}/>                                \n                                // <Items Data = { data[i] } />\n                            );\n                        })\n                    }</div>\n                    </StockContext.Provider>\n                    {spinnerOn === true ?\n                        <Spinner animation=\"border\" role=\"status\">\n                            <span className=\"sr-only\">Loading...</span>\n                        </Spinner>\n                        : null\n                    }\n                    {dataZero === false ?\n                    <button className=\"btn btn-primary\" onClick={()=>{\n                        spinnerOnSet(true);\n                        let Count=0;\n                        axios.get('https://codingapple1.github.io/shop/data2.json')\n                        .then((result)=>{\n                            // dataSet([...data, ...result.data]);\n                            let newArray=[...data];\n                            result.data.map(function(e, i){\n                                newArray.push(e);\n                            })\n                            dataSet(newArray);\n                            spinnerOnSet(false);\n                            dataZeroSet(true);\n                        })\n                        .catch(()=>{\n                            spinnerOnSet(false);\n                            console.log('데이터 통신 실패');\n                        });\n                    }}>더보기</button>\n                :null}\n                </div>\n            </Route>\n\n            <Route path=\"/detail/:id\">{/* 상세페이지 */}\n                <StockContext.Provider value={stock}>\n                    <Word Weight=\"bold\">상세페이지</Word>\n                    <Detail data={data} stock={stock} stockSet={stockSet}/>\n                </StockContext.Provider>\n            </Route>\n\n            <Route path=\"/cart\"> {/* 장바구니 */}\n                <Cart></Cart>\n            </Route>\n\n            <Route path=\"/:id\">\n            <Detail/>\n            </Route> \n\n            </Switch>\n        </div>\n    );\n\n    function Items(props){\n        return(\n            <div className=\"col-4\">\n                <Link to={\"/detail/\"+props.Num} >\n                <div>\n                <img src={\"https://codingapple1.github.io/shop/shoes\"+(Number([props.Num])+1)+\".jpg\"}/>\n                </div>\n                <h5>{ props.Data.title }</h5>\n                <p>{props.Data.content}</p><p className=\"BeforePrice\">{props.Data.price.toLocaleString()}원</p><p className=\"AfterPrice\">{(props.Data.price*0.8).toLocaleString()}원</p>\n                </Link>\n                <Test Num={props.Num}></Test>\n            </div>\n        )\n    }\n    function Test(props){\n        let stock2 = useContext(StockContext);\n        return <p>{\"수량 : \"+stock2[props.Num]}</p>\n        \n    }\n}\n\nexport default App;\n","export default __webpack_public_path__ + \"static/media/MainPanel.4f12ab95.jpg\";","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { BrowserRouter } from 'react-router-dom';\nimport {Provider} from 'react-redux'\nimport { combineReducers, createStore } from 'redux';\n\nlet storeCart = [];\nlet duplicateCheck = false;\n\nfunction reducer(state = storeCart, CartAction){\n  if (CartAction.type === 'IncreasedIn'){\n    let copy = [...state];\n    copy[CartAction.payload.i].quan++;\n    state = copy;\n    return state;\n  }else if (CartAction.type === 'DecreasedIn'){\n    if(state[CartAction.payload.i].quan > 1){\n      let copy = [...state];\n      copy[CartAction.payload.i].quan--;\n      state = copy;\n      return state;\n    }else {\n      return state;\n    }\n  } else if (CartAction.type === 'DeleteItem'){\n    console.log(state[CartAction.payload.i]);\n    delete state[CartAction.payload.i];\n    console.log(state);\n    return state;\n  }else if (CartAction.type === 'AddItem'){\n    state.map((e, i)=>{\n      console.log(e);\n      if (e.id === CartAction.payload.id){\n        duplicateCheck = true;\n      }else {\n        duplicateCheck = false;\n      }\n    })\n    if(duplicateCheck === false){\n      CartAction.payload.quan=1;\n      CartAction.payload.discountPrice=CartAction.payload.price*0.8;\n      state.push(CartAction.payload);\n    }\n    return state;\n  }else if(CartAction.type === 'Payment'){\n    \n  }else if(CartAction.type === 'AllDelete'){\n    state.slice(0, state.length);\n  }else{\n    return state;\n  }\n}\n\nlet store = createStore(reducer);\n// let store = createStore(combineReducers({reducer, reducer2})); // 리듀서 여러개 쓰는법\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter>\n      <Provider store={store}>\n        <App />\n      </Provider>\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}